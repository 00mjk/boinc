<?php
// ; $Id$

/**
 * @file
 * Enables BOINC team functionality.
 *
 * Integrates team data and features of the existing
 * BOINC platorm with the Drupal concept of a team.
 */


/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
 * Includes that provide supporting functions
 *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

require_once('includes/boincteam.forms.inc');
//require_once('includes/boincteam.helpers.inc');


/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
 * Hooks into core modules
 *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

/**
 * Implementation of hook_menu()
 */
function boincteam_menu() {
  $items = array();
  $items['community/teams/%/join'] = array(
    'page callback' => 'boincteam_join',
    'page arguments' => array(2),
    'access arguments' => array('join boincteam'),
    'type' => MENU_CALLBACK
  );
  $items['community/teams/%/leave'] = array(
    'page callback' => 'boincteam_leave',
    'page arguments' => array(2),
    'access arguments' => array('join boincteam'),
    'type' => MENU_CALLBACK
  );
  $items['community/teams/%/delete'] = array(
    'page callback' => 'boincteam_delete',
    'page arguments' => array(2),
    'access callback' => 'boincteam_is_founder',
    'access arguments' => array(2),
    'type' => MENU_CALLBACK
  );
  $items['community/teams/%/edit/admins/remove/%'] = array(
    'page callback' => 'boincteam_remove_admin',
    'page arguments' => array(2,6),
    'access callback' => 'boincteam_is_founder',
    'access arguments' => array(2),
    'type' => MENU_CALLBACK
  );
  $items['community/teams/%/edit/members/remove/%'] = array(
    'page callback' => 'boincteam_remove_member',
    'page arguments' => array(2,6),
    'access callback' => 'boincteam_is_founder',
    'access arguments' => array(2),
    'type' => MENU_CALLBACK
  );

  return $items;
}

/**
* Implementation of hook_views_api().
*/
function boincteam_views_api() {
  return array(
    'api' => 2.0,
    'path' => drupal_get_path('module', 'boincteam')
  );
}

/**
 * Implementation of hook_perm()
 */
function boincteam_perm() {
  return array('join boincteam', 'create boincteam', 'manage boincteam');
}

/**
 * Callback ...
 */
function boincteam_top_teams() {
  
}


/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
 * BOINC team functions
 *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

/**
 * Delete the team, if empty
 */
function boincteam_delete($team_id) {
  $team = node_load($team_id);
  $boincteam = boincteam_load(boincteam_lookup_id($team_id), TRUE);
  if ($boincteam->nusers == 0) {
    $boincteam->delete();
    node_unpublish_action($team);
    $team->uid = 0;
    node_save($team);
    drupal_set_message(t('@team has been removed.',
      array('@team' => $boincteam->name)));
    drupal_goto('community/teams');
  }
  else {
    drupal_set_message(t('All members must be removed from @team before the
      team can be deleted.', array('@team' => $boincteam->name)), 'error');
    drupal_goto(strstr($_GET['q'], '/delete', TRUE));
  }
}

/**
 * Get the join date of a user
 */
function boincteam_get_member_join_date($boincteam_id, $boincuser_id = NULL) {
  if (!$boincuser_id) {
    global $user;
    $account = user_load($user->uid);
    $boincuser_id = $account->boincuser_id;
  }
  db_set_active('boinc');
  $timestamp = db_result(db_query("
    SELECT timestamp FROM {team_delta} WHERE
    userid = %d AND teamid = %d AND joining = 1
    ORDER BY timestamp DESC LIMIT 1",
    $boincuser_id, $boincteam_id
  ));
  db_set_active('default');
  return $timestamp;
}

/**
 * Get the team type for display
 */
function boincteam_get_type($team_id) {
  //$vid = boincteam_get_vocabulary_by_name('Teams'); $team->vid = $vid;
  $team = node_load($team_id);
  $terms = taxonomy_node_get_terms($team);
  if ($terms) {
    $term = reset($terms);
    return $term->name;
  } else {
    return null;
  }
}

/**
 * Access a vocabulary of terms by name
 */ 
function boincteam_get_vocabulary_by_name($name) {
  $vocabs = taxonomy_get_vocabularies('team');
  foreach ($vocabs as $vocab) {
    if ($vocab->name == $name) return $vocab->vid;
  }
  return null;
}

/**
 * Convert a BOINC team ID to a Drupal team ID
 */
function boincteam_lookup_nid($boinc_id) {
  $drupal_id = db_result(db_query("SELECT nid FROM {boincteam} WHERE team_id='%d'", $boinc_id));
  return $drupal_id;
}

/**
 * Convert a Drupal team ID to a BOINC team ID
 */
function boincteam_lookup_id($nid) {
  $boinc_id = db_result(db_query("SELECT team_id FROM {boincteam} WHERE nid = '%d'", $nid));
  return $boinc_id;
}

/**
 * Get a BOINC team object
 */
function boincteam_load($boincteam_id, $full_object = FALSE) {
  require_boinc(array('team'));
  $team = BoincTeam::lookup_id($boincteam_id);
  if ($team AND $full_object) {
    $team->nusers = BoincUser::count("teamid={$team->id}");
    $team->nusers_worked = BoincUser::count("teamid={$team->id} and total_credit>0");
    $team->nusers_active = BoincUser::count("teamid={$team->id} and expavg_credit>0.1");
    $team->forum = BoincForum::lookup("parent_type=1 and category={$team->id}");
    $team->new_members = new_member_list($boincteam_id);
    $team->admins = admin_list($boincteam_id);
    $team->founder = BoincUser::lookup_id($team->userid);
  }
  return $team;
}

/**
 * Check if a user is the team founder
 */
function boincteam_is_founder($nid, $uid = NULL) {
  if (!$uid) {
    global $user;
    $uid = $user->uid;
  }
  $team_id = boincteam_lookup_id($nid);
  require_boinc('team');
  return is_team_founder(boincuser_load($uid), boincteam_load($team_id));
}

/**
 * Check if a user is a team admin
 */
function boincteam_is_admin($nid, $uid = NULL) {
  if (!$uid) {
    global $user;
    $uid = $user->uid;
  }
  $team_id = boincteam_lookup_id($nid);
  require_boinc('team');
  return is_team_admin(boincuser_load($uid), boincteam_load($team_id));
}

/**
 * Check if a user is a team member
 */
function boincteam_is_member($nid, $uid = NULL) {
  if (!$uid) {
    global $user;
    $uid = $user->uid;
  }
  $account = user_load($uid);
  return ($account->team == $nid);
}

/**
 * Add a user to a team
 */
function boincteam_join($team_id) {
  global $user;
  $account = user_load($user->uid);
  
  $boincteam_id = boincteam_lookup_id($team_id);
  $boincteam = boincteam_load($boincteam_id);
  if ($boincteam->joinable AND $account->team != $team_id) {
    require_boinc('team');
    $boincuser = boincuser_load();
    if (user_join_team($boincteam, $boincuser)) {
      drupal_set_message(t('You are now a member of @team!',
        array('@team' => $boincteam->name)));
      watchdog('boincteam', 'added user @uid to team @nid',
        array('@uid' => $user->uid, '@nid' => $team_id), WATCHDOG_NOTICE);
    }
    else {
      drupal_set_message(t('There was a problem joining @team, please try again
        later', array('@team' => $boincteam->name)));
      watchdog('boincteam', 'error adding user @uid to team @nid',
        array('@uid' => $user->uid, '@nid' => $team_id), WATCHDOG_ERROR);
    }
  }
  drupal_goto("community/teams/{$team_id}");
}

/**
 * Leave a team
 */
function boincteam_leave($team_id) {
  global $user;
  $account = user_load($user->uid);
  
  $boincteam_id = boincteam_lookup_id($team_id);
  $boincteam = boincteam_load($boincteam_id);
  if ($account->team == $team_id) {
    require_boinc('team');
    $boincuser = boincuser_load();
    user_quit_team($boincuser);
    drupal_set_message(t('You are no longer a member of @team.',
      array('@team' => $boincteam->name)));
    watchdog('boincteam', 'removed user @uid from team @nid',
      array('@uid' => $user->uid, '@nid' => $team_id), WATCHDOG_NOTICE);
  }
  else {
      drupal_set_message(t('You are not a member of @team, so you cannot revoke
        your membership to it.', array('@team' => $boincteam->name)));
  }
  drupal_goto("community/teams/{$team_id}");
}

/**
 * Remove team admin status from a user
 */
function boincteam_remove_admin($team_id, $user_id) {
  global $user;
  $account = user_load($user_id);
  $team = node_load($team_id);
  $boincteam_id = boincteam_lookup_id($team_id);
  $boincuser_id = $account->boincuser_id;
  
  if (boincteam_is_admin($team_id, $account->uid)) {
    // Update the team in the BOINC db
    db_set_active('boinc');
    db_query("
      DELETE FROM {team_admin} WHERE
        teamid = '%d' AND userid = '%d'",
      $boincteam_id,
      $boincuser_id
    );
    db_set_active('default');
    drupal_set_message(t('@user is no longer an admin of @team.',
      array(
        '@user' => $account->boincuser_name,
        '@team' => $team->title
      )
    ));
    watchdog('boincteam', 'User @current_user removed admin status for user
      @uid from team @nid',
      array(
        '@current_user' => $user->uid,
        '@uid' => $account->uid, 
        '@nid' => $team_id
      ), WATCHDOG_NOTICE);
  }
  drupal_goto("community/teams/{$team_id}/edit/admins");
}

/**
 * Remove a user from a team
 */
function boincteam_remove_member($team_id, $user_id) {
  global $user;
  $account = user_load($user_id);
  
  $boincteam_id = boincteam_lookup_id($team_id);
  $boincteam = boincteam_load($boincteam_id);
  if ($account->team == $team_id) {
    require_boinc('team');
    $boincuser = boincuser_load($user_id);
    user_quit_team($boincuser);
    drupal_set_message(t('@user has been removed from @team.',
      array(
        '@user' => $account->boincuser_name,
        '@team' => $boincteam->name
      )
    ));
    watchdog('boincteam', 'User @current_user removed user @uid from team @nid',
      array(
        '@current_user' => $user->uid,
        '@uid' => $account->uid, 
        '@nid' => $team_id
      ), WATCHDOG_NOTICE);
  }
  else {
      drupal_set_message(t('@user is not a member of @team, so you cannot
        revoke the membership.', array(
          '@user' => $account->boincuser_name,
          '@team' => $boincteam->name
        )
      ));
  }
  drupal_goto("community/teams/{$team_id}/edit/members");
}

/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
 * Pane content for panels
 *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

/**
 * General info about the concept of teams
 */                                         
function boincteam_topic_overview_panel() {
  $site_name =  variable_get('site_name', t('Project'));
  $output = '';
  $output .= '<h2 class="pane-title">' . t('Teams') . '</h2>';
  $output .= '<div class="balance-height">';
  $output .= '<p>' . t('@project participants may form teams. You may belong
    to only one team. You can join or quit a team at any time. To join a team,
    visit its team page and click "Join this team". Each team has a founder who
    may:', array('@project' => $site_name)) . '</p>';
  $output .= '<ul>';
  $output .= '  <li>' . t('access team members\' email addresses') . '</li>';
  $output .= '  <li>' . t('edit the team\'s name and description') . '</li>';
  $output .= '  <li>' . t('add or remove team admins') . '</li>';
  $output .= '  <li>' . t('remove members from the team') . '</li>';
  $output .= '  <li>' . t('disband a team if it has no members') . '</li>';
  $output .= '</ul>';
  $output .= '</div>';
  $output .= '<div class="hack" style="height: 74px;">.</div>';
  return $output;
}

function boincteam_search_panel() {
  $output = '';
  $output .= '<h2 class="pane-title">' . t('Search teams') . '</h2>';
  $output .= '<p>' . t('Render a search form here.') . '</p>';
  return $output;
}

/**
 * Link to create a new team
 */
function boincteam_create_team_link_panel() {
  $output = '';
  $output .= '<h2 class="pane-title">' . t('Create a new team') . '</h2>';
  $output .= '<p>' . t('If you cannot find a team that is right for you, you
    can create a team.') . '</p>';
  $output .= '<ul class="tab-list">';
  $output .= '  <li class="first last tab">' . 
    l(t('Create new team'), 'community/teams/add') . '</li>';
  $output .= '</ul>';
  return $output;
}

/**
 * Create team form
 */
function boincteam_create_team_panel() {
  $output = '';
  $output .= '<h2 class="pane-title">' . t('Create a team') . '</h2>';
  $output .= drupal_get_form('boincteam_create_form');
  
  return $output;
}

/**
 * Edit team form
 */
function boincteam_edit_team_panel($team_id) {
  $team = node_load($team_id);
  $output = '';
  $output .= '<h2 class="pane-title">' . $team->title . '</h2>';
  $output .= drupal_get_form('boincteam_edit_form', $team_id);
  
  return $output;
}

/**
 * Link to join a team
 */
function boincteam_join_team_panel($team_id) {
  $team = node_load($team_id);
  $output = '';
  $output .= '<h2 class="pane-title">' . t('Join team') . '</h2>';
  $output .= '<p>' . t('Click here to become a member of @this_team',
    array('@this_team' =>$team->title)) . '</p>';
  $output .= '<ul class="tab-list">';
  $output .= '  <li class="first last tab">' . 
    l(t('Join this team'), "community/teams/{$team_id}/join") . '</li>';
  $output .= '</ul>';
  return $output;
}

/**
 * Link to leave a team
 */
function boincteam_leave_team_panel($team_id) {
  $team = node_load($team_id);
  $output = '';
  $output .= '<h2 class="pane-title">' . t('Leave team') . '</h2>';
  $output .= '<p>' . t('Click here to revoke your membership with @this_team',
    array('@this_team' =>$team->title)) . '</p>';
  $output .= '<ul class="tab-list">';
  $output .= '  <li class="first last tab">' . 
    l(t('Leave this team'), "community/teams/{$team_id}/leave") . '</li>';
  $output .= '</ul>';
  return $output;
}

/**
 * Team management tools
 */
function boincteam_management_panel($team_id) {
  $is_founder = boincteam_is_founder($team_id);
  $team = node_load($team_id);
  $output = '';
  $output .= '<h2 class="pane-title">' . t('Manage team') . '</h2>';
  $output .= '<div class="form-item">';
  $output .= '  <label>' . t('View member list') . '</label>';
  $output .= '  <ul class="tab-list">';
  $output .= '    <li class="first tab primary">' . 
    l('HTML', "community/teams/{$team_id}/members") . '</li>';
  $output .= '    <li class="last tab primary">' .
    l('text', "community/teams/{$team_id}/members/email") . '</li>';
  $output .= '  </ul>';
  $output .= '  <div class="description">';
  $output .=   t('Member names and emails');
  $output .= '  </div>';
  $output .= '</div>'; 
  $output .= '<div class="form-item">';
  $output .= '  <label>' . t('View change history') . '</label>';
  $output .= '  <ul class="tab-list">';
  $output .= '    <li class="first tab primary">' . 
    l('HTML', "community/teams/{$team_id}/history") . '</li>';
  $output .= '    <li class="last tab primary">' .
    l('XML', "community/teams/{$team_id}/history/xml") . '</li>';
  $output .= '  </ul>';
  $output .= '  <div class="description">';
  $output .=   t('See member activity');
  $output .= '  </div>';
  $output .= '</div>';
  if (module_exists('boincteam_forum')) {
    if ($is_founder) {
      $output .= '<div class="form-item">';
      $output .= '  <ul class="tab-list action-list">';
      $output .= '    <li class="first tab primary">' .   
        l(t('Manage team message board'), "community/teams/{$team_id}/forum");
      $output .= '    </li>';
      $output .= '  <div class="description">';
      $output .=   t('Create or manage message board');
      $output .= '  </div>';
      $output .= '</div>';
    }
  }
  $output .= '<div class="form-item">';
  $output .= '  <ul class="tab-list action-list">';
  $output .= '    <li class="first tab primary">' . 
    l(t('Remove members'), "community/teams/{$team_id}/edit/members") . '</li>';
  if ($is_founder) {
    $output .= '    <li class="tab primary">' . 
      l(t('Change founder'), "community/teams/{$team_id}/edit/founder") . '</li>';
    $output .= '    <li class="tab primary">' . 
      l(t('Manage team admins'), "community/teams/{$team_id}/edit/admins") . '</li>';
  }
  $output .= '    <li class="tab primary">' . 
    l(t('Edit team info'), "community/teams/{$team_id}/edit/info") . '</li>';
  if ($is_founder) {
    $output .= '    <li class="last tab primary">' . 
      l(t('Remove team'), "community/teams/{$team_id}/delete") . '</li>';
  }
  $output .= '  </ul>';
  $output .= '</div>';
  return $output;
}

/**
 * Link to user's team
 */
function boincteam_member_link_panel() {
  global $user;
  $account = user_load($user->uid);
  $team = node_load($account->team);
  $output = '';
  $output .= '<h2 class="pane-title">' . t('My team') . '</h2>';
  $output .= '<p>' . t('You are a member of @team.', 
    array('@team' => $team->title)) . '</p>';
  $output .= '<ul class="tab-list">';
  $output .= '  <li class="first last tab">' . 
    l(t('View my team'), "community/teams/{$account->team}") . '</li>';
  $output .= '</ul>';
  return $output;
}

/**
 * Link to user's team
 */
function boincteam_dashboard_panel($uid = NULL) {
  if (!$uid) {
    global $user;
    $uid = $user->uid;
  }
  $output = '';
  $account = user_load($uid);
  if ($account->team) {
    $team = boincteam_load(boincteam_lookup_id($account->team));
    $output .= '<h2 class="pane-title">' . $team->name . '</h2>';
    $output .= '<div class="stats">';
    $output .= '  <label>' . t('Member since: ') . '</label>';
    $output .= '  <span>' . date('j F Y', boincteam_get_member_join_date($team->id, $account->boincuser_id)) . '</span>';
    $output .= '</div>' . "\n";
    $output .= '<div class="stats">';
    $output .= '  <label>' . t('Country: ') . '</label>';
    $output .= '  <span>' . $team->country . '</span>';
    $output .= '</div>' . "\n";
    $output .= '<div class="stats">';
    $output .= '  <label>' . t('Total credit: ') . '</label>';
    $output .= '  <span>' . number_format(boincstats_credit_to_ghours($team->total_credit)) . '</span>';
    $output .= '</div>' . "\n";
    $output .= '<ul class="tab-list">';
    $output .= '  <li class="first last tab">' . 
      l(t('View team'), "community/teams/{$account->team}") . '</li>';
    $output .= '</ul>';
  }
  return $output;
}

/**
 * Link to view the member list for a team
 *//*
function boincteam_view_member_list_panel($team_id) {
  $team = boincteam_load(boincteam_lookup_id($team_id), TRUE);
  $founder = user_load(get_drupal_id($team->userid));
  $new_members = array();
  if ($team->new_members) {
    foreach ($team->new_members as $member) {
      $account = user_load(get_drupal_id($member->id));
      $new_members[] = l($account->boincuser_name, "account/{$account->uid}");
    }
  }
  $output = '';
  $output .= '<h2 class="pane-title">' . $team->name . '</h2>';
  $output .= '<div>' . l($team->name, "community/teams/{$team_id}") . '</div>';
  $output .= '<div>';
  $output .= '</div>';
  return $output;
}*/

/**
 * Link to view a team
 */
function boincteam_view_team_panel($team_id) {
  $team = boincteam_load(boincteam_lookup_id($team_id), TRUE);
  $founder = user_load(get_drupal_id($team->userid));
  $new_members = array();
  if ($team->new_members) {
    foreach ($team->new_members as $member) {
      $account = user_load(get_drupal_id($member->id));
      $new_members[] = l($account->boincuser_name, "account/{$account->uid}");
    }
  }
  $output = '';
  $output .= '<h2 class="pane-title">' . $team->name . '</h2>';
  $output .= '<div>';
  $output .= '<div class="left-column">';
  $output .= '<ul class="stats">';
  $output .= '  <li>' . t('Total credits') . ': ' . $team->total_credit . '</li>';
  $output .= '  <li>' . t('Recent avg credits') . ': ' . $team->expavg_credit . '</li>';
  $output .= '  <li>' . t('Country') . ': ' . $team->country . '</li>';
  $output .= '  <li>' . t('Type') . ': ' . boincteam_get_type($team_id) . '</li>';
  $output .= '</ul>';
  $output .= '</div>';
  $output .= '<div class="right-column">';
  $output .= '<ul class="stats">';
  $output .= '  <li>' . t('Founder') . ': ' . l($founder->boincuser_name, "account/{$founder->uid}") . '</li>';
  $output .= '  <li>' . t('New members in last day') . ': ' . implode('&middot;', $new_members) . '</li>';
  $output .= '  <li>' . t('Total members') . ': ' . l($team->nusers, "community/teams/{$team_id}/members") . '</li>';
  $output .= '  <li>' . t('Active members') . ': ' . $team->nusers_active . '</li>';
  $output .= '  <li>' . t('Members with credit') . ': ' . $team->nusers_worked . '</li>';
  $output .= '</ul>';
  $output .= '</div>';
  $output .= '</div>';
  $output .= '<div class="clearfix"></div>';
  if ($team->url) {
    $output .= '<div class="stats">';
    $output .= t('Web site') . ': ' . l("http://{$team->url}", "http://{$team->url}");
    $output .= '</div>';
  }
  if ($team->description) {
    $output .= '<h3>' . t('Description') . '</h3>';
    $output .= $team->description;
    $output .= '</div>';
  }
  return $output;
}

/**
 * General info about team admins
 */                                         
function boincteam_about_admins_panel() {
  $output = '';
  $output .= '<h2 class="pane-title">' . t('About team admins') . '</h2>';
  $output .= '<div>';
  $output .= '<p>' . t('Team admins can:') . '</p>';
  $output .= '<ul>';
  $output .= '  <li>' . t('Edit team information') . '</li>';
  $output .= '  <li>' . t('View the team\'s join / quit history') . '</li>';
  $output .= '  <li>' . t('Moderate the team forum') . '</li>';
  $output .= '  <li>' . t('remove members from the team') . '</li>';
  $output .= '  <li>' . t('disband a team if it has no members') . '</li>';
  $output .= '</ul>';
  $output .= '</div>';
  $output .= '<div>';
  $output .= '<p>' . t('Team admins cannot:') . '</p>';
  $output .= '<ul>';
  $output .= '  <li>' . t('Change the team founder') . '</li>';
  $output .= '  <li>' . t('Remove members') . '</li>';
  $output .= '  <li>' . t('Add / Remove team admins') . '</li>';
  $output .= '</ul>';
  $output .= '</div>';
  $output .= '<p>' . t('If a team admin quits the team, they cease to be a team
    admin. We recommend only selecting people you know and trust') . '</p>';
  return $output;
}
/**
 * General info about team admins
 */                                         
function boincteam_manage_admins_panel_header($team_id) {
  $output = '';
  $output .= '<h4>' . t('Add team admin') . '</h4>';
  $output .= drupal_get_form('boincteam_add_admin_form', $team_id);
  $output .= '<div class="clearfix"></div>';
  $output .= '<h4>' . t('Current team admins') . '</h4>';
  
  return $output;
}
